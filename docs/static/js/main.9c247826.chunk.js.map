{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","className","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","peticion","json","data","gifs","map","gif","id","title","image","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGif","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"6MAmCeA,EAhCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,cAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAerC,OAEI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,QAAU,GAC3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,SAO5C,2BACIC,UAAU,eACVC,KAAK,OACLC,MAAOV,EACPW,SAlBS,SAACR,GAClBF,EAAcE,EAAES,OAAOF,Y,uBCRzBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACG,mCACD,KACRC,EAHM,uDACG,mCADH,kBAEE,KAFF,cAG2EC,UAAWH,IAHtF,SAKWI,MAAMF,GALjB,cAKNG,EALM,gBAMSA,EAASC,OANlB,uBAMLC,EANK,EAMLA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAG,MACtB,CACIC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,MAAOH,EAAII,OAAOC,iBAAiBb,QAZ/B,kBAeLM,GAfK,4CAAH,sDCcEQ,EAZK,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MACzB,OACI,yBAAKnB,UAAU,+CACX,4BAAQA,UAAU,wBACd,yBAAKA,UAAU,aAAauB,IAAKJ,EAAOK,IAAKN,KAEjD,uBAAGlB,UAAU,iBAAiBkB,KCuB3BO,EA3BC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFZ,SAACA,GAAc,IAAD,EACJf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAHiB,mBACvBC,EADuB,KAChBC,EADgB,KAiB9B,OAVAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAjB,GACFe,EAAS,CACLf,KAAMA,EACNa,SAAS,SAGtB,CAACpB,IAEGqB,EDbwBI,CAAYzB,GAA/Bc,EAFgB,EAErBP,KAAaa,EAFQ,EAERA,QAGpB,OACI,oCACI,wBAAI1B,UAAU,mDAAoDM,GAEhEoB,GAAW,uBAAG1B,UAAU,oCAAb,eAEb,yBAAKA,UAAU,kBAEXoB,EAAOL,KAAI,SAACI,GAAD,OACP,kBAAC,EAAD,eACIa,IAAKb,EAAMF,IACPE,UEebc,EA9BM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,oBAFvB,mBAEhBQ,EAFgB,KAEJT,EAFI,KAavB,OACI,oCACI,wBAAIU,UAAU,iBAAd,gBACA,6BACA,kBAAC,EAAD,CAAaV,cAAeA,IAE5B,4BAEQS,EAAWgB,KAAI,SAAAT,GACX,OAAO,kBAAC,EAAD,CAAS0B,IAAK1B,EAAUA,SAAUA,UCtBjE4B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.9c247826.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('Hola Mundo');\n\n    const handleChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length >= 2){\n            setCategories(categories => [inputValue, ...categories]);\n        }\n    }\n\n    return (\n        \n        <form onSubmit={ handleSubmit }>\n            <input\n                className=\"input-search\"\n                type=\"text\"\n                value={inputValue}\n                onChange={handleChange}\n            />\n        </form>\n    );\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;\n\n","const getGifs = async (category) => {\n    const apiKey = '9EPL9flKppv6xPCLzBOt9oAmacqcNipN';\n    const limit = '10';\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&limit=${limit}&q=${encodeURI( category )}`;\n\n    const peticion = await fetch(url);\n    const {data} = await peticion.json();\n\n    const gifs = data.map( gif => (\n        {\n            id: gif.id,\n            title: gif.title,\n            image: gif.images.downsized_medium.url\n        }\n    ));\n    return gifs;\n}\n\nexport {getGifs}","import React from 'react';\n\nconst GifGridItem = ({title, image}) => {\n    return (\n        <div className=\"card-item animate__animated animate__fadeIn\">\n            <figure className=\"card-image-container\">\n                <img className=\"card-image\" src={image} alt={title}/>\n            </figure>\n            <p className=\"primary-color\">{title}</p>\n        </div>\n    );\n}\n\n\nexport default GifGridItem;","import React from 'react';\nimport { useFetchGif } from '../hooks/useFetchGif';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({category}) => {\n\n    const {data:images, loading} = useFetchGif(category)\n\n\n    return (\n        <>\n            <h3 className=\"primary-color animate__animated animate__fadeIn\">{ category }</h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\n            {\n            <div className=\"card-container\">\n            {\n                images.map((image) => (\n                    <GifGridItem \n                        key={image.id}\n                        {...image}\n                    />\n                ))\n            }\n            </div>\n\n            }\n        </>\n    );\n}\n\nexport default GifGrid;","import {useState, useEffect} from 'react';\nimport {getGifs} from '../helpers/getGifs'\nconst useFetchGif = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n\n    useEffect(() => {\n        getGifs(category)\n            .then(data => {\n                setState({\n                    data: data,\n                    loading: false\n                })\n            });\n    }, [category]);\n\n    return state;\n}\n\nexport {useFetchGif};","import React, {useState} from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Game of Thrones']);\n    /*\n    const handleAddCategory = () => {\n        const category = 'Attact on Titan';\n        setCategories([...categories, category]);\n\n    }\n    */\n\n\n\n    return (\n        <>\n            <h2 className=\"primary-color\">GifExpertApp</h2>\n            <hr />\n            <AddCategory setCategories={setCategories} />\n\n            <ul>\n                {\n                    categories.map(category => {\n                        return <GifGrid key={category} category={category}/>\n                    })\n                }\n            </ul>\n        </>\n    );\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}